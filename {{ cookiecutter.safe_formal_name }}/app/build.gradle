apply plugin: 'com.android.application'
apply plugin: 'com.chaquo.python'

android {
    // Android 13 == SDK Level 33. This number should generally be kept up to date with
    // the most recent supported Android release.
    compileSdkVersion 33
    // The default NDK used by Gradle 4.2 is 21.4.7075529 (r21e); while still suppoerted, it
    // isn't available on Github Actions. 25.1.8937393 (r25b) is the LTS as of Nov 2022f,
    // supports Android 13, should be orwards compatible, and is installed on Github Actions.
    ndkVersion "25.1.8937393"
    defaultConfig {
        applicationId "{{ cookiecutter.package_name }}.{{ cookiecutter.module_name }}"
        versionCode {{ cookiecutter.version_code }}
        versionName "{{ cookiecutter.version }}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Briefcase currently requires API Level 24 for the `pidof` command, and the `--pid`
        // argument to `adb logcat`. This supports over 90% of active devices
        // (https://github.com/beeware/rubicon-java/issues/74).
        minSdkVersion 24
        // This should gnerally match the compileSDKVersion from above.
        targetSdkVersion 33

        python {
            version "{{ cookiecutter.python_version|py_tag }}"
            pip {
                install "-r", "requirements.txt"
            }
        }
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"
            }
        }
        ndk {
            // Chaquopy also supports x86, but it's not very useful anymore, so we'll
            // disable it to speed up the build. For armeabi-v7a, see
            // https://github.com/chaquo/chaquopy/issues/709.
            abiFilters "arm64-v8a", "armeabi-v7a", "x86_64"
        }
    }

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_8
      targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            python.srcDirs = [
                "src/main/python",  // App code
                "src/main/python-briefcase",  // Template code
            ]
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
}

// ========== START USER PROVIDED CONTENT ==========
{{ cookiecutter.build_gradle_extra_content }}
